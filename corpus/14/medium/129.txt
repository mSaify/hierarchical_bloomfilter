
# Cohesion (computer science)

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

In computer programming, cohesion is a measure of how strongly-related and
focused the various responsibilities of a software module are. Cohesion is an
ordinal type of measurement and is usually expressed as "high cohesion" or
"low cohesion" when being discussed. Modules with high cohesion tend to be
preferable because high cohesion is associated with several desirable traits
of software including robustness, reliability, reusability, and
understandability whereas low cohesion is associated with undesirable traits
such as being difficult to maintain, difficult to test, difficult to reuse,
and even difficult to understand.

Cohesion is often contrasted with coupling, a different concept. Nonetheless
high cohesion often correlates with loose coupling, and vice versa. The
software quality metrics of coupling and cohesion were invented by Larry
Constantine [1] based on characteristics of "good" programming practices that
reduced maintenance and modification costs.

## Contents

  * 1 High cohesion
  * 2 Types of cohesion
  * 3 References
  * 4 External links

  
## [edit] High cohesion

Cohesion is a measure of how strongly-related or focused the responsibilities
of a single module are. In object-oriented programming, if the methods that
serve the given class tend to be similar in many aspects the class is said to
have high cohesion. In a highly-cohesive system, code readability and the
likelihood of reuse is increased, while complexity is kept manageable.

Cohesion is decreased if:

  * The responsibilities (methods) of a class have little in common.
  * Methods carry out many varied activities, often using coarsely-grained or unrelated sets of data.

Disadvantages of low cohesion (or "weak cohesion") are:

  * Increased difficulty in understanding modules.
  * Increased difficulty in maintaining a system, because logical changes in the domain affect multiple modules, and because changes in one module require changes in related modules.
  * Increased difficulty in reusing a module because most applications wonât need the random set of operations provided by a module.

## [edit] Types of cohesion

Cohesion is a qualitative measure meaning that the source code text to be
measured is examined using a rubric to determine a cohesion classification.
The types of cohesion, in order of the worst to the best type, are as follows:

Coincidental cohesion (worst)

    Coincidental cohesion is when parts of a module are grouped arbitrarily (at random); the parts have no significant relationship (e.g. a module of frequently used functions).
Logical cohesion

    Logical cohesion is when parts of a module are grouped because they logically are categorised to do the same thing, even if they are different by nature (e.g. grouping all I/O handling routines).
Temporal cohesion

    Temporal cohesion is when parts of a module are grouped by when they are processed - the parts are processed at a particular time in program execution (e.g. a function which is called after catching an exception which closes open files, creates an error log, and notifies the user).
Procedural cohesion

    Procedural cohesion is when parts of a module are grouped because they always follow a certain sequence of execution (e.g. a function which checks file permissions and then opens the file).
Communicational cohesion

    Communicational cohesion is when parts of a module are grouped because they operate on the same data (e.g. a module which operates on the same record of information).
Sequential cohesion

    Sequential cohesion is when parts of a module are grouped because the output from one part is the input to another part like an assembly line (e.g. a function which reads data from a file and processes the data).
Functional cohesion (best)

    Functional cohesion is when parts of a module are grouped because they all contribute to a single well-defined task of the module (e.g. parsing XML in the case of Expat (XML)).
Since cohesion is a ranking type of scale, the ranks do not indicate a steady
progression of improved cohesion. Studies by various people including Larry
Constantine, Edward Yourdon, and Steve McConnell [2] indicate that the first
two types of cohesion are inferior; communicational and sequential cohesion
are very good; and functional cohesion is superior.

While functional cohesion is considered the most desirable type of cohesion
for a software module, it may not be achievable. There are cases where
communicational cohesion is the highest level of cohesion that can be attained
under the circumstances.

## [edit] References

  1. ^ W. Stevens, G. Myers, L. Constantine, "Structured Design", IBM Systems Journal, 13 (2), 115-139, 1974.
  2. ^ Code Complete 2nd Ed.

  * Yourdon, E.; Constantine, L L. (1979). Structured Design: Fundamentals of a Discipline of Computer Program and Systems Design. copyright 1979 by Prentice-Hall. Yourdon Press.

## [edit] External links

  * Cohesion metrics
  * The Practical Guide to Structured Systems Design - CHAPTER 6
  * SemmleCode \- A code querying tool, with a large library of software metrics, including metrics to compute cohesion. Find detailed descriptions of metrics with their clear and concise definition in an object-oriented query language and their corresponding references...

Retrieved from "http://en.wikipedia.org/wiki/Cohesion_(computer_science)"

Categories: Software architecture

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * ÐÑÐ»Ð³Ð°ÑÑÐºÐ¸
  * Deutsch
  * Malti
  * æ¥æ¬èª
  * Polski
  * Ð ÑÑÑÐºÐ¸Ð¹
  * Suomi

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 7 April 2009, at 08:46 (UTC).
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



