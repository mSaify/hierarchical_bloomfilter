
# Persistence (computer science)

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

Persistence in computer science refers to the characteristic of data that
outlives the execution of the program that created it. Without this
capability, data only exists in RAM, and will be lost when the memory loses
power, such as on computer shutdown.

## Contents

  * 1 Overview
  * 2 Persistence topics
    * 2.1 Built-in to operating systems and programming languages
    * 2.2 User interface
    * 2.3 Storage devices
    * 2.4 Incremental persistence
    * 2.5 Persistence Services
  * 3 See also
  * 4 References

  
## [edit] Overview

In programming, persistence refers specifically to the ability to retain data
structures between program executions, such as, for example, an image editing
program saving complex selections or a word processor saving undo history.

This is achieved in practice by storing the data in non-volatile storage such
as a file system or a relational database or an object database. Design
patterns solving this problem are container based persistence, component based
persistence and the Data Access Object model. When first introduced, the idea
was that persistence should be an intrinsic property of the data, in contrast
with the traditional approach where data is read and written to disk using
imperative verbs in a programming language. This emphasis has largely
disappeared, resulting in the use of persist as a transitive verb: On
completion, the program persists the data. Examples of persistence are using
Java serialization to store Java objects on disk or using Java EE to store
Enterprise Java Beans in a relational database.

## [edit] Persistence topics

### [edit] Built-in to operating systems and programming languages

Orthogonal persistence refers to either

  * inherent support provided by a programming language or operating system of a computer that enables the state of programs written in a persistent programming language. Programming languages that implement orthogonal persistence include 
    * PS-Algol
    * Smalltalk and Lisp, using images

  * operating systems that remain persistent even after a crash or unexpected shutdown. The computer stays in the same state even if you turn it off, behaving much like a TV or similar device. Operating systems that employ this ability include 
    * CapROS, revisions of EROS
    * Coyotos, successor to EROS
    * EROS, the successor to KeyKOS
    * KeyKOS
    * Multics with its single-level store
    * Phantom

### [edit] User interface

Most software applications include persistence as a minimum required feature
in order for the software to be considered complete. In this context,
persistence operations are usually separated into well-recognized categories,
based on the types of data entries stored by the software. These categories
are:

  * the ability to add (or create) new entries;
  * the ability to view (or retrieve) existing entries;
  * the ability to edit (or update) existing entries;
  * the ability to delete existing entries.

Moreover, although not necessarily a minimum required standard for software,
the following operations are also commonly associated with persistence,
whenever a large number of entries must be maintained:

  * the ability to search for entries;
  * the ability to sort entries;
  * the ability to filter entries.

### [edit] Storage devices

Persistent storage (PSD) is the ability for a device to maintain data even
when it is turned off. Devices that provide persistent storage capabilities
are called non-volatile memory devices. Examples are a hard drive, flash
memory and CD.

Devices that need power to provide data, as does random access memory (RAM),
are called volatile memory devices and do not provide persistent storage.

On many early personal data assistants (PDAs), all data was stored in RAM.
When the batteries ran out of power, all data was lost. Most newer PDA designs
provide persistent storage to prevent the user from losing all data on the
device.

### [edit] Incremental persistence

Incremental persistence is simply writing each change to an in-memory-
datastructure immediately to disk or other non volatile storage device. When
used with object-oriented languages, this is known as object prevalence.

### [edit] Persistence Services

Persistence services is when the workflow runtime engine semantics dictate
that persistence should occur, the workflow runtime engine will call methods
supplied by a persistence service to save state information about the workflow
instance. Likewise when workflow runtime engine needs to restore a previously
persisted workflow instance, it will call methods supplied by the persistence
service to load this state information.

## [edit] See also

  * CRUD
  * Hibernate (Java)
  * Java Persistence API
  * Live USB
  * Object Prevalence
  * Orthogonality
  * Persistent data structure
  * Service Data Object

## [edit] References

<IMG>

This article does not cite any references or sources. Please help improve this
article by adding citations to reliable sources (ideally, using inline
citations). Unsourced material may be challenged and removed. (October 2008)  
Retrieved from "http://en.wikipedia.org/wiki/Persistence_(computer_science)"

Categories: Persistence | Computing terminology | Computer programming |
Computational models

Hidden categories: Articles lacking sources from October 2008 | All articles
lacking sources

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * CatalÃ 
  * Deutsch
  * EspaÃ±ol
  * FranÃ§ais
  * æ¥æ¬èª
  * Nederlands
  * PortuguÃªs

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 7 April 2009, at 01:12.
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



