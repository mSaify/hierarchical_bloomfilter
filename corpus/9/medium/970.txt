
# Conway's Game of Life

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

<IMG>

This article needs additional citations for verification. Please help improve
this article by adding reliable references (ideally, using inline citations).
Unsourced material may be challenged and removed. (April 2008)  
"Conway game", which redirects here, can also refer to games as defined by
surreal numbers, which Conway also developed.

<IMG>

Gosper's Glider Gun creating "gliders".

The Game of Life, also known simply as Life, is a cellular automaton devised
by the British mathematician John Horton Conway in 1970. It is the best-known
example of a cellular automaton.

The "game" is actually a zero-player game, meaning that its evolution is
determined by its initial state, requiring no further input from human
players. One interacts with the Game of Life by creating an initial
configuration and observing how it evolves.

## Contents

  * 1 Rules
  * 2 Origins
  * 3 Examples of patterns
  * 4 Iteration
  * 5 Algorithms
  * 6 Variations on Life
  * 7 Games based upon Conway's Game of Life
  * 8 Notable Life programs
  * 9 See also
  * 10 References
  * 11 External links

  
## [edit] Rules

The universe of the Game of Life is an infinite two-dimensional orthogonal
grid of square cells, each of which is in one of two possible states, live or
dead. Every cell interacts with its eight neighbours, which are the cells that
are directly horizontally, vertically, or diagonally adjacent. At each step in
time, the following transitions occur:

  1. Any live cell with fewer than two live neighbours dies, as if by needs caused by underpopulation.
  2. Any live cell with more than three live neighbours dies, as if by overcrowding.
  3. Any live cell with two or three live neighbours lives, unchanged, to the next generation.
  4. Any dead cell with exactly three live neighbours becomes a live cell.

The initial pattern constitutes the 'seed' of the system. The first generation
is created by applying the above rules simultaneously to every cell in the
seed â births and deaths happen simultaneously, and the discrete moment at
which this happens is sometimes called a tick. (In other words, each
generation is a pure function of the one before.) The rules continue to be
applied repeatedly to create further generations.

## [edit] Origins

<IMG>

<IMG>

A breeder, which creates guns, which in turn create gliders. The patterns in
the game of life can become quite complex: Conway and his students devised a
pattern with 1013 cells, that acts as a Turing complete computer.[1]

Conway was interested in a problem presented in the 1940s by renowned
mathematician John von Neumann, who tried to find a hypothetical machine that
could build copies of itself and succeeded when he found a mathematical model
for such a machine with very complicated rules on a rectangular grid. The Game
of Life emerged as Conway's successful attempt to simplify von Neumann's
ideas. The game made its first public appearance in the October 1970 issue of
Scientific American, in Martin Gardner's "Mathematical Games" column. From a
theoretical point of view, it is interesting because it has the power of a
universal Turing machine: that is, anything that can be computed
algorithmically can be computed within Conway's Game of Life. Gardner wrote:

> The game made Conway instantly famous, but it also opened up a whole new
field of mathematical research, the field of cellular automata ... Because of
Life's analogies with the rise, fall and alterations of a society of living
organisms, it belongs to a growing class of what are called 'simulation games'
(games that resemble real life processes)

Ever since its publication, Conway's Game of Life has attracted much interest
because of the surprising ways in which the patterns can evolve. Life is an
example of emergence and self-organization. It is interesting for physicists,
biologists, economists, mathematicians, philosophers, generative scientists
and others to observe the way that complex patterns can emerge from the
implementation of very simple rules. The game can also serve as a didactic
analogy, used to convey the somewhat counterintuitive notion that "design" and
"organization" can spontaneously emerge in the absence of a designer. For
example, philosopher and cognitive scientist Daniel C. Dennett has used the
analog of Conway's Life "universe" extensively to illustrate the possible
evolution of complex philosophical constructs, such as consciousness and free
will, from the relatively simple set of deterministic physical laws governing
our own universe.[2][3][4]

The popularity of Conway's Life was helped by its coming into being just in
time for a new generation of inexpensive minicomputers which were being
released into the market, meaning that the game could be run for hours on
these machines which were otherwise unused at night. In this respect it
foreshadowed the later popularity of computer-generated fractals. For many,
Life was simply a programming challenge, a fun way to waste CPU cycles. For
some, however, Life had more philosophical connotations. It developed a cult
following through the 1970s and beyond; current developments have gone so far
as to create theoretic emulations of computer systems within the confines of a
Life board.

Conway chose his rules carefully, after considerable experimentation, to meet
three criteria:

  1. There should be no initial pattern for which there is a simple proof that the population can grow without limit.
  2. There should be initial patterns that apparently do grow without limit.
  3. There should be simple initial patterns that grow and change for a considerable period of time before coming to an end in the following possible ways: 
    
    * Fading away completely (from overcrowding or from becoming too sparse); or
    * Settling into a stable configuration that remains unchanged thereafter, or entering an oscillating phase in which they repeat an endless cycle of two or more periods.

## [edit] Examples of patterns

<IMG>

The evolution and movement of a glider.

<IMG>

The evolution and movement of a LWSS.

Many different types of patterns occur in the Game of Life, including static
patterns ("still lives"), repeating patterns ("oscillators" â a superset of
still lives), and patterns that translate themselves across the board
("spaceships"). Common examples of these three classes are shown below, with
live cells shown in black, and dead cells shown in white.

Block (still life) Image:Game of life block.svg  
Boat (still life) Image:game of life boat.png  
Blinker (two-phase oscillator) Image:game of life blinker.png  
Toad (two-phase oscillator) Image:game of life toad.png  
Glider (spaceship) Image:game of life glider.png  
Lightweight spaceship (LWSS) Image:game of life lwss.png  
Pulsar (three-phase oscillator) Image:4demons.png  
The "pulsar"[5] is the most common period 3 oscillator. The great majority of
naturally occurring oscillators are period 2, like the blinker and the toad,
but periods 4, 8, 14, 15, 30, and a few others have been seen on rare
occasions.[6]

Patterns called "Methuselahs" can evolve for long periods before repeating.
"Diehard" is a pattern that eventually disappears after 130 generations, or
steps. "Acorn" takes 5206 generations to generate 633 cells including 13
escaped gliders.

Image:game of life diehard.png Image:game of life methuselah.png  
Diehard Acorn  
Conway originally conjectured that no pattern can grow indefinitely â i.e.,
that for any initial configuration with a finite number of living cells, the
population cannot grow beyond some finite upper limit. In the game's original
appearance in "Mathematical Games", Conway offered a $50 prize to the first
person who could prove or disprove the conjecture before the end of 1970. One
way to disprove it would be to discover patterns that keep adding counters to
the field: a "gun", which would be a configuration that repeatedly shoots out
moving objects such as the "glider", or a "puffer train", which would be a
configuration that moves but leaves behind a trail of persistent "smoke".

The prize was won in November of the same year by a team from the
Massachusetts Institute of Technology, led by Bill Gosper; the "Gosper gun"
shown below produces its first glider on the 15th generation, and another
glider every 30th generation from then on. This first glider gun is still the
smallest one known:

Image:Game of life glider gun.png  
Gosper Glider Gun

Simpler patterns were later found that also exhibit infinite growth. All three
of the following patterns grow indefinitely: the first two create one "block-
laying" switch engine each, while the third creates two. The first has only 10
live cells (which has been proven to be minimal).[7] The second fits in a 5 Ã
5 square. The third is only one cell high:

Image:game of life infinite1.png Image:game of life infinite2.png  
  
Image:game of life infinite3.svg  
Later discoveries included other "guns", which are stationary and shoot out
gliders or other spaceships; "puffers", which move along leaving behind a
trail of debris; and "rakes", which move and emit spaceships. Gosper also
constructed the first pattern with an asymptotically optimal quadratic growth
rate, called a "breeder", or "lobster", which worked by leaving behind a trail
of guns.

It is possible for gliders to interact with other objects in interesting ways.
For example, if two gliders are shot at a block in just the right way, the
block will move closer to the source of the gliders. If three gliders are shot
in just the right way, the block will move farther away. This "sliding block
memory" can be used to simulate a counter. It is possible to construct logic
gates such as AND, OR and NOT using gliders. It is possible to build a pattern
that acts like a finite state machine connected to two counters. This has the
same computational power as a universal Turing machine, so the Game of Life is
theoretically as powerful as any computer with unlimited memory and no time
constraints: it is Turing complete. (For example, the entire complexity of
Microsoft Word could be programmed into a game of Life with one starting
state, and some inputs and outputs (that would represent information like a
document. All the information would be there. However, the time ticks would
have to be faster than those of any physical computer, and the interface to
human displays would probably require a separate computer to read and write to
the Game of Life grid.) Furthermore, a pattern can contain a collection of
guns that combine to construct new objects, including copies of the original
pattern. A "universal constructor" can be built which contains a Turing
complete computer, and which can build many types of complex objects,
including more copies of itself.[8]

## [edit] Iteration

From a random initial pattern of living cells on the grid, observers will find
the population constantly changing as the generations tick by. The patterns
that emerge from the simple rules may be considered a form of beauty. Small
isolated subpatterns with no initial symmetry tend to become symmetrical. Once
this happens the symmetry may increase in richness, but it cannot be lost
unless a nearby subpattern comes close enough to disturb it. In a very few
cases the society eventually dies out, with all living cells vanishing, though
this may not happen for a great many generations. Most initial patterns
eventually "burn out", producing either stable figures or patterns that
oscillate forever between two or more states; many also produce one or more
gliders or spaceships that travel indefinitely away from the initial location.

## [edit] Algorithms

<IMG>

<IMG>

Conway discovered that the F-pentomino failed to stabilise in a small number
of generations. (1103 generations with 6 gliders)

The earliest results in the Game of Life were obtained without the use of
computers. The simplest still-lives and oscillators were discovered while
tracking the fates of various small starting configurations using graph paper,
blackboards, physical game boards (such as Go) and the like. During this early
research, Conway discovered that the F-pentomino (which he called the
"R-pentomino") failed to stabilize in a small number of generations.

These discoveries inspired computer programmers over the world to write
programs to track the evolution of Life patterns. Most of the early algorithms
were similar. They represented Life patterns as two-dimensional arrays in
computer memory. Typically two arrays are used, one to hold the current
generation and one in which to calculate its successor. Often 0 and 1
represent dead and live cells, respectively. A double loop considers each
element of the current array in turn, counting the live neighbours of each
cell to decide whether the corresponding element of the successor array should
be 0 or 1. The successor array is displayed. For the next iteration the arrays
swap roles so that the successor array in the last iteration becomes the
current array in the next iteration.

A variety of minor enhancements to this basic scheme are possible, and there
are many ways to save unnecessary computation. A cell that did not change at
the last time step, and none of whose neighbours changed, is guaranteed not to
change at the current time step as well, so a program that keeps track of
which areas are active can save time by not updating the inactive zones.

In principle, the Life field is infinite, but computers have finite memory,
and usually array sizes must be declared in advance. This leads to problems
when the active area encroaches on the border of the array. Programmers have
used several strategies to address these problems. The simplest strategy is
simply to assume that every cell outside the array is dead. This is easy to
program, but leads to inaccurate results when the active area crosses the
boundary. A more sophisticated trick is to consider the left and right edges
of the field to be stitched together, and the top and bottom edges also,
yielding a toroidal array. The result is that active areas that move across a
field edge reappear at the opposite edge. Inaccuracy can still result if the
pattern grows too large, but at least there are no pathological edge effects.
Techniques of dynamic storage allocation may also be used, creating ever-
larger arrays to hold growing patterns.

Alternatively, the programmer may abandon the notion of representing the Life
field with a 2-dimensional array, and use a different data structure, like a
vector of coordinate pairs representing live cells. This approach allows the
pattern to move about the field unhindered, as long as the population does not
exceed the size of the live-coordinate array. The drawback is that counting
live neighbours becomes a search operation, slowing down simulation speed.
With more sophisticated data structures this problem can also be largely
solved.

For exploring large patterns at great time depths, sophisticated algorithms
like Hashlife may be useful.

There is also a method for implementation of the game of life using arbitrary
asynchronous updates but still exactly emulating the behaviour of the
synchronous game, also applicable to other cellular automata.[9]

## [edit] Variations on Life

Since Life's original inception, new rules have been developed. The standard
Game of Life, in which a cell is "born" if it has exactly 3 neighbours, stays
alive if it has 2 or 3 living neighbours, and dies otherwise, is symbolised as
"23/3". The first number, or list of numbers, is what is required for a cell
to continue. The second set is the requirement for birth. Hence "16/6" means
"a cell is born if there are 6 neighbours, and lives on if there are either 1
or 6 neighbours". HighLife is 23/36, because having 6 neighbours, in addition
to the original game's 23/3 rule, causes a birth. HighLife is best known for
its replicators. Additional variations on Life exist, although the vast
majority of these universes are either too chaotic or desolate.

<IMG>

A sample of a 48-step oscillator along with a 2-step oscillator and a 4-step
oscillator from a 2D hexagonal Game of Life (rule 34/2).

Some variations modify the geometry of the universe as well as the rule. The
above variations can be thought of as 2D Square, because the world is two-
dimensional and laid out in a square grid. 3D Square and 1D Square variations
have been developed, as have 2D Hexagonal variations where the grid is
hexagonal or triangular instead of square.

Conway's rules may also be generalized so that instead of two states (live and
dead) there are three or more. State transitions are then determined either by
a weighting system or by a table specifying separate transition rules for each
state; for example, Mirek's Cellebration's multi-coloured "Rules Table" and
"Weighted Life" rule families each include sample rules equivalent to Conway's
Life.

Patterns relating to fractals and fractal systems may also be observed in
certain Life-like variations. For example, the automaton 12/1 generates four
very close approximations to the SierpiÅski triangle when applied to a single
live cell.

Immigration is a variation that is the same as the Game of Life, except that
there are two ON states (often expressed as two different colours). Whenever a
new cell is born, it takes on the ON state that is the majority in the three
cells that gave it birth. This feature can be used to examine interactions
between spaceships and other "objects" within the game.[10] Another similar
variation, called QuadLife, involves four different ON states. When a new cell
is born from three different ON neighbours, it takes on the fourth value, and
otherwise like Immigration it takes the majority value.[11] Except for the
variation among ON cells, both of these variations act identically to Life.

## [edit] Games based upon Conway's Game of Life

Some games for entertainment purposes have been developed from the Game of
Life. One such game, for two players which each interact with the "game" once
per tick, is based upon Conway's Game of Life. Live cells have one of two
colours and a player wins when all cells of the opponent's colour are
eliminated. When a dead cell becomes live, its colour is determined by the
dominating colour of its neighbour live cells (which are exactly three), like
in the aforementioned Immigration. Start with a random or pre-chosen starting
pattern with half the live cells of each colour. After one iteration, the
first player may add one cell of his colour and remove one cell of his
opponent's colour. After the next iteration the other player can do the same,
and so forth.

## [edit] Notable Life programs

The first Life program was written for the PDP-7 by M. J. T. Guy and S. R.
Bourne in 1970. Without its help some discoveries about the game would have
been difficult to make.[12]

There are now thousands of Life programs online, so a full list will not be
provided here. The following is a selection of a small number of programs with
some special claim to notability, such as popularity or unusual features. Most
of these programs incorporate a graphical user interface for pattern editing
and simulation, the capability for simulating multiple rules including Life,
and a large library of interesting patterns in Life and other CA rules.

  * Conway's Game of Life by Alan Hensel. A pop-up Java web applet with fast simulation algorithms and a big library of interesting Life patterns.
  * Golly. A cross-platform (Windows, Macintosh, and Linux) open-source simulation system for Life and other cellular automata by Andrew Trevorrow and Tomas Rokicki. It includes the hashlife algorithm for extremely fast generation and Perl or Python scriptability for both editing and simulation.
  * Life32. Freeware for Windows machines includes powerful and scriptable pattern editing features.
  * Mirek's Cellebration. Free 1-D and 2-D cellular automata viewer, explorer and editor for Windows. Includes powerful facilities for simulating and viewing a wide variety of CA rules including Life, and a scriptable editor.
  * Xlife A cellular-automaton laboratory by Jon Bennett. Long time the standard Linux Life simulation application, it has also been ported to Windows. Can handle cellular automaton rules with the same neighbourhood as Life and up to eight possible states per cell. See [1] for many alternative versions.

## [edit] See also

  * Garden of Eden pattern
  * Hacker Emblem, depicting a glider
  * Hashlife
  * Life-like cellular automaton

## [edit] References

  1. ^ Daniel Dennet (1995), Darwin's Dangerous Idea, Penguin Books, London, ISBN-13 978-0-140-16734-4 (ISBN-10: 0-140-16734-X)
  2. ^ Dennett, D.C. (1991). Consciousness Explained. Boston: Back Bay Books. ISBN 0316180661
  3. ^ Dennett, D.C. (1995). Darwin's Dangerous Idea: Evolution and the Meanings of Life. New York: Simon & Schuster. ISBN 068482471X
  4. ^ Dennett, D.C. (2003). Freedom Evolves. New York: Penguin Books. ISBN 0142003840
  5. ^ "Pulsar". Eric Weisstein's Treasure Trove of Life. http://www.ericweisstein.com/encyclopedias/life/Pulsar.html. Retrieved on 2008-09-16.
  6. ^ Achim Flammenkamp (2004-09-07). "Most seen natural occurring ash objects in Game of Life". http://wwwhomes.uni-bielefeld.de/achim/freq_top_life.html. Retrieved on 2008-09-16.
  7. ^ "Infinite Growth". Eric Weisstein's Treasure Trove of Life. http://www.ericweisstein.com/encyclopedias/life/InfiniteGrowth.html. Retrieved on 2008-09-16.
  8. ^ Descriptions of these constructions are given in Berlekamp, E. R.; Conway, John Horton; Guy, R.K. (2001 2004), Winning Ways for your Mathematical Plays (2nd ed.), A K Peters Ltd, ISBN 978-1-56881-130-7; ISBN 156881142X; ISBN 1568811438; ISBN 1568811446 .
  9. ^ Nehaniv, Chrystopher L. (2002), "Self-Reproduction in Asynchronous Cellular Automata", 2002 NASA/DoD Conference on Evolvable Hardware (15-18 July 2002, Alexandria, Virginia, USA), IEEE Computer Society Press, pp. 201-209
  10. ^ "Immigration". Eric Weisstein's Treasure Trove of Life. http://www.ericweisstein.com/encyclopedias/life/Immigration.html. Retrieved on 2008-09-16.
  11. ^ "QuadLife". Eric Weisstein's Treasure Trove of Life. http://www.ericweisstein.com/encyclopedias/life/QuadLife.html. Retrieved on 2008-09-16.
  12. ^ Gardner, Martin (October 1970), "Mathematical Games: The fantastic combinations of John Conway's new solitaire game "Life"", Scientific American 223: 120â123 .

## [edit] External links

Sister project Wikimedia Commons has media related to: Game of Life  
  * Conway's Game of Life at the Open Directory Project
  * Game of Life News
  * Cellular Automata FAQ â Conway's Game of Life
  * A Turing Machine in Conway's Game of Life

v â¢ d â¢ e

Conway's Game of Life & related cellular automata  
Structures

Breeder Â· Garden of Eden Â· Glider Â· Gun Â· Methuselah Â· Oscillator Â·
Puffer train Â· Rake Â· Reflector Â· Sawtooth Â· Spaceship Â· Spark Â· Still
life  
Life variants

Day & Night Â· HighLife Â· Seeds  
Concepts

Moore neighborhood Â· Speed of light  
Implementations

Hashlife Â· Mirek's Cellebration Â· Video Life  
Key people

John Conway Â· Martin Gardner Â· Bill Gosper Â· Richard Guy  
Popular culture

Bloom Â· Hacker Emblem  
Retrieved from "http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"

Categories: Cellular automaton rules | Self-organization

Hidden categories: Articles needing additional references from April 2008

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * CatalÃ 
  * Deutsch
  * EspaÃ±ol
  * FranÃ§ais
  * íêµ­ì´
  * Interlingua
  * Italiano
  * ×¢××¨××ª
  * Latina
  * LatvieÅ¡u
  * LietuviÅ³
  * Magyar
  * Nederlands
  * æ¥æ¬èª
  * Polski
  * PortuguÃªs
  * Ð ÑÑÑÐºÐ¸Ð¹
  * Simple English
  * Suomi
  * Svenska
  * TÃ¼rkÃ§e
  * Ð£ÐºÑÐ°ÑÐ½ÑÑÐºÐ°
  * VolapÃ¼k
  * ç²µèª
  * ä¸­æ

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 3 April 2009, at 19:54.
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



