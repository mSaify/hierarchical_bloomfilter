
# Mathematics of Sudoku

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

The class of Sudoku puzzles consists of a partially completed row-column grid
of cells partitioned into N regions each of size N cells, to be filled in
using a prescribed set of N distinct symbols (typically the numbers {1, ...,
N}), so that each row, column and region contains exactly one of each element
of the set. The puzzle can be investigated using mathematics.

## Contents

  * 1 Overview
    * 1.1 Mathematical context
      * 1.1.1 Sudokus from group tables
    * 1.2 Terminology
    * 1.3 Variants
    * 1.4 Definition of terms and labels
  * 2 Enumerating Sudoku solutions
    * 2.1 Enumerating all possible Sudoku solutions
      * 2.1.1 Enumerating the Sudoku 9Ã9 grid solutions directly
      * 2.1.2 Enumeration using band generation
    * 2.2 Enumerating essentially different Sudoku solutions
      * 2.2.1 Sudoku preserving symmetries
      * 2.2.2 Identifying distinct solutions with Burnside's Lemma
  * 3 Enumeration results
    * 3.1 Sudoku with rectangular regions
    * 3.2 Sudoku bands
    * 3.3 Sudoku with additional constraints
  * 4 Minimum number of givens
    * 4.1 Ordinary Sudoku
    * 4.2 Sudoku with additional constraints
    * 4.3 Sudoku with irregular regions
    * 4.4 Sum number place ("Killer Sudoku")
  * 5 Method and algorithm details for the 9Ã9 grid direct enumeration
    * 5.1 Counting the top band permutations
      * 5.1.1 Band1 permutation details
    * 5.2 Band1 symmetries and equivalence classes
      * 5.2.1 Solution and counting permutation symmetry
      * 5.2.2 Band 1 reduction details
    * 5.3 Band 2-3 completion and results
  * 6 Constraints of Clue Geometry
  * 7 See also
  * 8 References
  * 9 External links

  
## [edit] Overview

The mathematical analysis of Sudoku falls into two main areas: analyzing the
properties of a) completed grids and b) puzzles. Grid analysis has largely
focused on counting (enumerating) possible solutions for different variants.
Puzzle analysis centers on the initial given values. The techniques used in
either are largely the same: combinatorics and permutation group theory,
augmented by the dexterous application of programming tools.

There are many Sudoku variants, (partially) characterized by the size (N) and
shape of their regions. For classic Sudoku, N=9 and the regions are 3x3
squares (blocks). A rectangular Sudoku uses rectangular regions of row-column
dimension RÃC. For RÃ1 (and 1ÃC), i.e. where the region is a row or column,
Sudoku becomes a Latin square.

Other Sudoku variants also exist, such as those with irregularly-shaped
regions or with additional constraints (hypercube) or different (Samunamupure)
constraint types. See Sudoku - Variants for a discussion of variants and
Sudoku terms and jargon for an expanded listing.

The mathematics of Sudoku is a relatively new area of exploration, mirroring
the popularity of Sudoku itself. NP-completeness was documented late 2002 [1],
enumeration results began appearing in May 2005 [2].

In contrast with the two main mathematical approaches of Sudoku mentioned
above, an approach resting on mathematical logic and dealing with the
resolution of the puzzles from the viewpoint of a player has recently been
proposed in Denis Berthier's book "The Hidden Logic of Sudoku". This uncovers
and formalizes all the generalized mathematical symmetries of the game and
elicits new resolution rules based on them, such as hidden xy-chains.

### [edit] Mathematical context

The general problem of solving Sudoku puzzles on n2 Ã n2 boards of n Ã n
blocks is known to be NP-complete [1]. For n=3 (classical Sudoku), however,
this result is of little relevance: algorithms such as Dancing Links can solve
puzzles in fractions of a second.

Solving Sudoku puzzles can be expressed as a graph coloring problem. Consider
the 9 Ã 9 = 32 Ã 32 case. The aim of the puzzle in its standard form is to
construct a proper 9-coloring of a particular graph, given a partial
9-coloring. The graph in question has 81 vertices, one vertex for each cell of
the grid. The vertices can be labeled with the ordered pairs (x, y), where x
and y are integers between 1 and 9. In this case, two distinct vertices
labeled by (x, y) and (xâ², yâ²) are joined by an edge if and only if:

  * x = xâ² (same column) or,
  * y = yâ² (same row) or,
  * â x/3 â = â xâ²/3 â and â y/3 â = â yâ²/3 â (same 3 Ã 3 cell)

The puzzle is then completed by assigning an integer between 1 and 9 to each
vertex, in such a way that vertices that are joined by an edge do not have the
same integer assigned to them.

A valid Sudoku solution grid is also a Latin square. The relationship between
the two theories is now known precisely: it has been shown by D. Berthier that
a first order formula that does not mention regions (also called blocks) is
valid for Sudoku if and only if it is valid for Latin Squares.

There are significantly fewer valid Sudoku solution grids than Latin squares
because Sudoku imposes the additional regional constraint. Nonetheless, the
number of valid Sudoku solution grids for the standard 9Ã9 grid was
calculated by Bertram Felgenhauer in 2005 to be 6,670,903,752,021,072,936,960
[3] (sequence A107739 in OEIS). This number is equal to 9! Ã 722 Ã 27 Ã
27,704,267,971, the last factor of which is prime. The result was derived
through logic and brute force computation. The derivation of this result was
considerably simplified by analysis provided by Frazer Jarvis and the figure
has been confirmed independently by Ed Russell. Russell and Jarvis also showed
that when symmetries were taken into account, there were 5,472,730,538
solutions [4] (sequence A109741 in OEIS). The number of valid Sudoku solution
grids for the 16Ã16 derivation is not known.

The maximum number of givens that can be provided while still not rendering
the solution unique, regardless of variation, is four short of a full grid; if
two instances of two numbers each are missing and the cells they are to occupy
are the corners of an orthogonal rectangle, and exactly two of these cells are
within one region, there are two ways the numbers can be added. The inverse of
thisâthe fewest givens that render a solution uniqueâis an unsolved
problem, although the lowest number yet found for the standard variation
without a symmetry constraint is 17, a number of which have been found by
Japanese puzzle enthusiasts [5] [6], and 18 with the givens in rotationally
symmetric cells.

#### [edit] Sudokus from group tables

As in the case of Latin squares the (addition- or) multiplication tables
(Cayley tables) of finite groups can be used to construct Sudokus and related
tables of numbers. Namely, one has to take subgroups and quotient groups into
account:

Take for example \\mathbb{Z}_{n}\\oplus\\mathbb{Z}_{n} the group of pairs,
adding each component separately modulo some n. By omitting one of the
components we suddenly find ourselves in \\mathbb{Z}_{n} (and this mapping is
obviously compatible with the respective additions, i.e. it is a group
homomorphism). One also says that the latter is a quotient group of the
former, because some once different elements become equal in the new group.
However, it is also a subgroup, because we can simply fill the missing
component with 0 to get back to \\mathbb{Z}_{n}\\oplus\\mathbb{Z}_{n}.

Under this view we write down the example n = 3:

The addition table in \\mathbb{Z}_{3}\\oplus\\mathbb{Z}_{3} (0,0) (0,1) (0,2)  
(0,1) (0,2) (0,0)  
(0,2) (0,0) (0,1)  
(1,0) (1,1) (1,2)  
(1,1) (1,2) (1,0)  
(1,2) (1,0) (1,1)  
(2,0) (2,1) (2,2)  
(2,1) (2,2) (2,0)  
(2,2) (2,0) (2,1)  
(1,0) (1,1) (1,2)  
(1,1) (1,2) (1,0)  
(1,2) (1,0) (1,1)  
(2,0) (2,1) (2,2)  
(2,1) (2,2) (2,0)  
(2,2) (2,0) (2,1)  
(0,0) (0,1) (0,2)  
(0,1) (0,2) (0,0)  
(0,2) (0,0) (0,1)  
(2,0) (2,1) (2,2)  
(2,1) (2,2) (2,0)  
(2,2) (2,0) (2,1)  
(0,0) (0,1) (0,2)  
(0,1) (0,2) (0,0)  
(0,2) (0,0) (0,1)  
(1,0) (1,1) (1,2)  
(1,1) (1,2) (1,0)  
(1,2) (1,0) (1,1)  
Each Sudoku region looks the same on the second component (namely like the
subgroup \\mathbb{Z}_{3}), because these are added regardless of the first
one. On the other hand, the first components are equal in each block, and if
we imagine each block as one cell, these first components show the same
pattern (namely the quotient group \\mathbb{Z}_{3}). As already outlined in
the article of Latin squares, this really is a Latin square of order 9.

Now, to yield a Sudoku, let us permute the rows (or equivalently the columns)
in such a way, that each block is redistributed exactly once into each block -
for example order them 1,4,7,2,5,8,3,6,9. This of course preserves the Latin
square property. Furthermore, in each block the lines have distinct first
component by construction and each line in a block has distinct entries via
the second component, because the blocks' second components originally formed
a Latin square of order 3 (from the subgroup \\mathbb{Z}_{3}).

Thus we really get a Sudoku (Rename the pairs to numbers 1...9 if you wish)!
With the example and the row permutation above we yield:

  

Generating a Sudoku (0,0) (0,1) (0,2)  
(1,0) (1,1) (1,2)  
(2,0) (2,1) (2,2)  
(1,0) (1,1) (1,2)  
(2,0) (2,1) (2,2)  
(0,0) (0,1) (0,2)  
(2,0) (2,1) (2,2)  
(0,0) (0,1) (0,2)  
(1,0) (1,1) (1,2)  
(0,1) (0,2) (0,0)  
(1,1) (1,2) (1,0)  
(2,1) (2,2) (2,0)  
(1,1) (1,2) (1,0)  
(2,1) (2,2) (2,0)  
(0,1) (0,2) (0,0)  
(2,1) (2,2) (2,0)  
(0,1) (0,2) (0,0)  
(1,1) (1,2) (1,0)  
(0,2) (0,0) (0,1)  
(1,2) (1,0) (1,1)  
(2,2) (2,0) (2,1)  
(1,2) (1,0) (1,1)  
(2,2) (2,0) (2,1)  
(0,2) (0,0) (0,1)  
(2,2) (2,0) (2,1)  
(0,2) (0,0) (0,1)  
(1,2) (1,0) (1,1)  
For this method to work, one generally does not need a product of two equally-
sized groups. A so-called short exact sequence of finite groups of appropriate
size already does the job! Try for example the group \\mathbb{Z}_{4} with
quotient- and subgroup \\mathbb{Z}_{2}. It seems clear (already from
enumeration arguments), that not all Sudokus can be generated this way!

### [edit] Terminology

A puzzle is a partially completed grid. The initial puzzle values are known as
givens or clues. The regions are also called boxes or blocks. The use of the
term square is generally avoided because of ambiguity. Horizontally adjacent
blocks constitute a band (the vertical equivalent is called a stack).

A proper puzzle has a unique solution. The constraint 'each digit appears in
each row, column and region' is called the One Rule.

See basic terms [7] or the List of Sudoku terms and jargon for an expanded
list of terminology.

### [edit] Variants

Sudoku regions are polyominoes. Although the classic "3x3" Sudoku is made of
square nonominoes, it is possible to apply the rules of Sudoku to puzzles of
other sizes â the 2x2 and 4x4 square puzzles, for example. Only NÂ²xNÂ²
Sudoku puzzles can be tiled with square polyominoes. Another popular variant
is made of rectangular regions â for example, 2x3 hexominoes tiled in a 6x6
grid. The following notation is used for discussing this variant. RxC denotes
a rectangular region with R rows and C columns. The implied grid configuration
has R blocks per band (C blocks per stack), CÃR bandsÃstacks and grid
dimensions NxN, with N = R Â· C. Puzzles of size NxN, where N is prime can
only be tiled with irregular N-ominoes. Each NxN grid can be tiled multiple
ways with N-ominoes. Before enumerating the number of solutions to a Sudoku
grid of size NxN, it is necessary to determine how many N-omino tilings exist
for a given size (including the standard square tilings, as well as the
rectangular tilings).

The size ordering of Sudoku puzzle can be used to define an integer series,
e.g. for square Sudoku, the integer series of possible solutions ((sequence
A107739 in OEIS)).

Sudoku with square NxN regions are more symmetrical than immediately obvious
from the One Rule. Each row and column intersects N regions and shares N cells
with each. The number of bands and stacks also equals N. Rectangular Sudoku do
not have these properties. The "3x3" Sudoku is additionally unique: N is also
the number of row-column-region constraints from the One Rule (i.e. there are
N=3 types of units).

See the List of Sudoku terms and jargon for an expanded list and
classification of variants.

### [edit] Definition of terms and labels

Term Labels 1 2 3  
2 B1  
3  
4 5 6  
B2  
7 8 9  
B3  
4  
5 B4  
6  
c  
B5 5  
r 5 6  
B6  
7  
8 B7  
9  
B8  
B9  
Let

  * s be a solution to a Sudoku grid with specific dimensions, satisfying the One Rule constraints
  * S = {s}, be the set of all solutions
  * |S|, the cardinality of S, is the number of elements in S, i.e. the number of solutions, also known as the size of S.

The number of solutions depends on the grid dimensions, rules applied and the
definition of distinct solutions. For the 3Ã3 region grid, the conventions
for labeling the rows, columns, blocks (boxes) are as shown. Bands are
numbered top to bottom, stacks left to right. By extension the labeling scheme
applies to any rectangular Sudoku grid.

Term labels for box-row and box-column triplets are also shown.

  * triplet - an unordered combination of 3 values used in a box-row (or box-column), e.g. a triplet = {3, 5, 7} means the values 3, 5, 7 occur in a box-row (column) without specifying their location order. A triplet has 6 (3!) ordered permutations. By convention, triplet values are represented by their ordered digits. Triplet objects are labeled as:
  * rBR, identifies a row triplet for box B and (grid) row R, e.g. r56 is the triplet for box 5, row 6, using the grid row label.
  * cBC, identifies similarly a column triplet for box B and (grid) column row C.

The {a, b, c} notation also reflects that fact a triplet is a subset of the
allowed digits. For regions of arbitrary dimension, the related object is
known as a minicol(umn) or minirow.

## [edit] Enumerating Sudoku solutions

The answer to the question 'How many Sudokus are there?' depends on the
definition of when similar solutions are considered different.

### [edit] Enumerating all possible Sudoku solutions

For the enumeration of all possible solutions, two solutions are considered
distinct if any of their corresponding (81) cell values differ. Symmetry
relations between similar solutions are ignored., e.g. the rotations of a
solution are considered distinct. Symmetries play a significant role in the
enumeration strategy, but not in the count of all possible solutions.

#### [edit] Enumerating the Sudoku 9Ã9 grid solutions directly

The first approach taken historically to enumerate Sudoku solutions
('Enumerating possible Sudoku grids' [2] by Felgenhauer and Jarvis) was to
analyze the permutations of the top band used in valid solutions. Once the
Band1 symmetries and equivalence classes for the partial grid solutions were
identified, the completions of the lower two bands were constructed and
counted for each equivalence class. Summing completions over the equivalence
classes, weighted by class size, gives the total number of solutions as
6,670,903,752,021,072,936,960 (6.67Ã1021). The value was subsequently
confirmed numerous times independently. The Algorithm details section (below)
describes the method.

#### [edit] Enumeration using band generation

A second enumeration technique based on band generation was later developed
that is significantly less computationally intensive.

### [edit] Enumerating essentially different Sudoku solutions

Two valid grids are essentially the same if one can be derived from the other.

#### [edit] Sudoku preserving symmetries

The following operations always translate a valid Sudoku grid into another
valid grid: (values represent permutations for classic Sudoku)

  * Relabeling symbols (9!)
  * Band permutations (3!)
  * Row permutations within a band (3!3)
  * Stack permutations (3!)
  * Column permutations within a stack (3!3)
  * Reflection, transposition or (1/4 turn) rotation (2) (Given any of these 3 (in conjunction with the above permutations), the other 2 can be produced, so this operation only contributes a factor of 2).

These operations define a symmetry relation between equivalent grids.
Excluding relabeling, and with respect to the 81 grid cell values, the
operations form a subgroup of the symmetric group S81, of order 3!8Ã2 =
3359232.

#### [edit] Identifying distinct solutions with Burnside's Lemma

For a solution, the set of equivalent solutions which can be reached using
these operations (excluding relabeling), form an orbit of the symmetric group.
The number of essentially different solutions is then the number of orbits,
which can be computed using Burnside's lemma. The Burnside fixed points are
solutions that differ only by relabeling. Using this technique, Jarvis/Russell
[4] computed the number of essentially different (symmetrically distinct)
solutions as 5,472,730,538.

## [edit] Enumeration results

The number of ways of filling in a blank Sudoku grid was shown in May 2005 to
be 6,670,903,752,021,072,936,960 (~6.67Ã1021) (original announcement [8]).
The paper 'Enumerating possible Sudoku grids' [2], by Felgenhauer and Jarvis,
describes the calculation.

Since then, enumeration results for many Sudoku variants have been calculated:
these are summarised below.

### [edit] Sudoku with rectangular regions

In the table, "Dimensions" are those of the regions (e.g. 3x3 in normal
Sudoku). The "Rel Err" column indicates how a simple approximation, using the
generalised method of Kevin Kilfoil [9], compares to the true grid count: it
is an underestimate in all cases evaluated so far.

Dimensions Nr Grids Attribution Verified? Rel Err  
1x? see Latin squares n/a  
2Ã2 288 various [10] Yes -11.1%  
2Ã3 28200960 = c. 2.8Ã107 Pettersen [11] Yes -5.88%  
2Ã4 29136487207403520 = c. 2.9Ã1016 Russell [12] Yes -1.91%  
2Ã5 1903816047972624930994913280000 = c. 1.9Ã1030 Pettersen [13] Yes -0.375%  
2Ã6 38296278920738107863746324732012492486187417600000 = c. 3.8Ã1049
Pettersen [14] No -0.238%  
3Ã3 6670903752021072936960 = c. 6.7Ã1021 Felgenhauer/Jarvis [3] Yes -0.207%  
3Ã4 81171437193104932746936103027318645818654720000 = c. 8.1Ã1046 Pettersen
/ Silver [15] No -0.132%  
3Ã5 unknown, estimated c. 3.5086Ã1084 Silver [16] n/a  
4Ã4 unknown, estimated c. 5.9584Ã1098 Silver [17] n/a  
4Ã5 unknown, estimated c. 3.1764Ã10175 Silver [18] n/a  
5Ã5 unknown, estimated c. 4.3648Ã10308 Silver / Pettersen [19] n/a  
The standard 3Ã3 calculation can be carried out in less than a second on a
PC. The 3Ã4 (= 4Ã3) problem is much harder and took 2568 hours to solve,
split over several computers.

### [edit] Sudoku bands

For large (R,C), the method of Kevin Kilfoil [20] (generalised method: [21])
is used to estimate the number of grid completions. The method asserts that
the Sudoku row and column constraints are, to first approximation,
conditionally independent given the box constraint. Omitting a little algebra,
this gives the Kilfoil-Silver-Pettersen formula:

    \\mbox{Number of Grids} \\simeq \\frac{b_{R,C}^C \\times b_{C,R}^R}{\(RC\)!^{RC}}
where bR,C is the number of ways of completing a Sudoku band [22] of R
horizontally adjacent RÃC boxes. Petersen's algorithm [23], as implemented by
Silver [24], is currently the fastest known technique for exact evaluation of
these bR,C.

The band counts for problems whose full Sudoku grid-count is unknown are
listed below. As in the previous section, "Dimensions" are those of the
regions.

     Dimensions Nr Bands Attribution Verified?  
2ÃC (2C)! (C!)2 (obvious result) Yes  
3ÃC \(3C\)! \(C!\)^6 \\sum_{k=0\\ldots C} {C \\choose k}^3 Pettersen [25] Yes  
4ÃC (long expression: see below) Pettersen [26] Yes [27]  
4Ã4 16! Ã 4!12 Ã 1273431960 = c. 9.7304Ã1038 Silver [28] Yes  
4Ã5 20! Ã 5!12 Ã 879491145024 = c. 1.9078Ã1055 Russell [29] Yes  
4Ã6 24! Ã 6!12 Ã 677542845061056 = c. 8.1589Ã1072 Russell [30] Yes  
4Ã7 28! Ã 7!12 Ã 563690747238465024 = c. 4.6169Ã1091 Russell [31] Yes  
(calculations up to 4Ã100 have been performed by Silver [32], but are not
listed here)  
5Ã3 15! Ã 3!20 Ã 324408987992064 = c. 1.5510Ã1042 Silver [33] Yes#  
5Ã4 20! Ã 4!20 Ã 518910423730214314176 = c. 5.0751Ã1066 Silver [34] Yes#  
5Ã5 25! Ã 5!20 Ã 1165037550432885119709241344 = c. 6.9280Ã1093 Pettersen /
Silver [35] No  
5Ã6 30! Ã 6!20 Ã 3261734691836217181002772823310336 = c. 1.2127Ã10123
Pettersen / Silver [36] No  
5Ã7 35! Ã 7!20 Ã 10664509989209199533282539525535793414144 = c.
1.2325Ã10154 Pettersen / Silver [37] No  
5Ã8 40! Ã 8!20 Ã 39119312409010825966116046645368393936122855616 = c.
4.1157Ã10186 Pettersen / Silver [38] No  
5Ã9 45! Ã 9!20 Ã 156805448016006165940259131378329076911634037242834944 =
c. 2.9406Ã10220 Pettersen / Silver [39] No  
5Ã10 50! Ã 10!20 Ã
674431748701227492664421138490224315931126734765581948747776 = c.
3.2157Ã10255 Pettersen / Silver [40] No  
    # : same author, different method
The expression for the 4ÃC case is: \(4C\)!\(C!\)^{12}\\sum_{a, b, c}
{\\left\( \\frac{C!^2}{a! b! c!} *
\\sum_{\\begin{matrix}k_{12},k_{13},k_{14},\\\\k_{23},k_{24},k_{34}\\end{matrix}}
{{a\\choose k_{12}}{b\\choose k_{13}}{c \\choose k_{14}}{c \\choose k_{23}}{b
\\choose k_{24}}{a \\choose k_{34}} } \\right\)^2 }

where:

    the outer summand is taken over all a,b,c such that 0<=a,b,c and a+b+c=2C
    the inner summand is taken over all k12,k13,k14,k23,k24,k34 â¥ 0 such that 
    k12,k34 â¤ a and
    k13,k24 â¤ b and
    k14,k23 â¤ c and
    k12+k13+k14 = a-k12+k23+k24 = b-k13+c-k23+k34 = c-k14+b-k24+a-k34 = C
### [edit] Sudoku with additional constraints

The following are all restrictions of 3x3 Sudokus. The type names have not
been standardised: click on the attribution links to see the definitions.

Type Nr Grids Attribution Verified?  
3doku 104015259648 Stertenbrink [41] Yes  
Disjoint Groups 201105135151764480 Russell [42] Yes  
Hypercube 37739520 Stertenbrink [43] Yes  
Magic Sudoku 5971968 Stertenbrink [44] Yes  
Sudoku X 55613393399531520 Russell [45] Yes  
NRC Sudoku 6337174388428800 Brouwer [46] Yes  
All Sudokus remain valid (no repeated numbers in any row, column or region)
under the action of the Sudoku preserving symmetries (see also Jarvis [4]).
Some Sudokus are special in that some operations merely have the effect of
relabelling the digits; several of these are enumerated below.

Transformation Nr Grids Attribution Verified?  
Transposition 10980179804160 Russell [4] Indirectly  
Quarter Turn 4737761280 Indirectly  
Half Turn 56425064693760 Indirectly  
Band cycling 5384326348800 Indirectly  
Within-band row cycling 39007939461120 Indirectly  
Further calculations of this ilk combine to show that the number of
essentially different Sudoku grids is 5,472,730,538, for example as
demonstrated by Jarvis / Russell [4] and verified by Pettersen [47]. Similar
methods have been applied to the 2x3 case, where Jarvis / Russell [48] showed
that there are 49 essentially different grids (see also the article by Bailey,
Cameron and Connelly [49]), to the 2x4 case, where Russell [50] showed that
there are 1,673,187 essentially different grids (verified by Pettersen [51]),
and to the 2x5 case where Pettersen [52] showed that there are
4,743,933,602,050,718 essentially different grids (not verified).

## [edit] Minimum number of givens

Proper puzzles have a unique solution. An irreducible puzzle (or minimal
puzzle) is a proper puzzle from which no givens can be removed leaving it a
proper puzzle (with a single solution). It is possible to construct minimal
puzzles with different numbers of givens. This section discusses the minimum
number of givens for proper puzzles.

### [edit] Ordinary Sudoku

The lowest known is 17 givens in general Sudoku, or 18 when the positions of
the givens are constrained to be half-turn rotationally symmetric. It is
conjectured that these are the best possible, evidence for which stems from
extensive randomised searching:

  * A/Prof Gordon Royle has compiled a list of (currently/February 16, 2008) 47621 17-clue puzzles [6] (+182 to 47793 by September 2008), each of which is unique up to isomorphism. None of these was isomorphic to a symmetric puzzle, nor contained a 16-clue puzzle.
  * An independent construction of 700 distinct 17-clue puzzles found only 33 not already on an earlier, size 32930, version of Royle's list. From that, the MLE estimate of the number of 17-clue grids was c. 34550\. If the construction methods were truly random and independent then this would imply a negligible probability of there being a 16-clue puzzle waiting to be discovered â since any such "16" would give rise to 65 17-clue puzzles, all of which were somehow missed in the search.
  * The most fruitful set of clue positions, in terms of number of distinct 17-clue puzzles they admit, from Royle's list have been exhaustively searched for 17-clue puzzles. All 36 puzzles found by this process were already in Royle's list. All 34 puzzles on the next most fruitful set of clue positions were also in Royle's list.
  * The most fruitful solution grids (in the same sense) have been exhaustively searched for 16-clue puzzles using CHECKER [53] with no success. This includes one, "strangely familiar" [54], grid that yields exactly 29 different 17-clue puzzles, all of which had already been discovered by Royle's random search technique (suggesting once again that Royle's list of 17s is close to complete).

### [edit] Sudoku with additional constraints

<IMG>

<IMG>

Disjoint Groups: 11 clues.

Additional constraints (here, on 3Ã3 Sudokus) lead to a smaller minimum
number of clues.

  * 3doku: no results for this variant
  * Disjoint Groups: some 12-clue puzzles [55] have been demonstrated by Glenn Fowler. Later also 11-clue puzzles are found. It is not known if this is the best possible.

  * Hypercube: various 8-clue puzzles [56] (the best possible) have been demonstrated by Guenter Stertenbrink.
  * Magic Sudoku: a 7-clue example [57] has been provided by Guenter Stertenbrink. It is not known if this is the best possible.
  * Sudoku X: a list of 1167 12-clue puzzles [58] has been collected by Ruud van der Werf. It is not known if this is the best possible.
  * NRC Sudoku: an 11-clue example [59] has been provided by Andries Brouwer. It is not known if this is the best possible.

### [edit] Sudoku with irregular regions

"Du-sum-oh" [60] (a.k.a. "geometry number place") puzzles replace the 3Ã3 (or
RÃC) regions of Sudoku with irregular shapes of a fixed size. Bob Harris has
proved [61] that it is always possible to create N-1 clue du-sum-ohs on an
NÃN grid, and has constructed several examples.

### [edit] Sum number place ("Killer Sudoku")

In sum number place (Samunamupure), the regions are of irregular shape and
various sizes. The usual constraints of no repeated value in any row, column
or region apply. The clues are given as sums of values within regions (e.g. a
4-cell region with sum 10 must consist of values 1,2,3,4 in some order). The
minimum number of clues for Samunamupure is not known, nor even conjectured.

A variant on Miyuki Misawa's web site [62] replaces sums with relations: the
clues are symbols =, < and > showing the relative values of (some but not all)
adjacent region sums. She demonstrates an example with only eight relations.
It is not known whether this is the best possible.

## [edit] Method and algorithm details for the 9Ã9 grid direct enumeration

The approach described here was the historically first strategy employed to
enumerate the Sudoku 9Ã9 grid solutions, as published by Felgenhauer and
Jarvis in 'Enumerating possible Sudoku grids' [2]. The methods and algorithms
used are very straight forward and provide a practical introduction to several
mathematical concepts. The development is presented here for those wishing to
explore these topics.

The strategy begins by analyzing the permutations of the top band used in
valid solutions. Once the Band1 symmetries and equivalence class for the
partial solutions are identified, the completions of the lower two bands are
constructed and counted for each equivalence class. Summing the completions
over the equivalence classes gives the total number of solutions as
6,670,903,752,021,072,936,960 (c. 6.67Ã1021).

### [edit] Counting the top band permutations

The Band1 algorithm proceeds as follows:

  * Choose a canonical labeling of the digits by assigning values for B1, e.g.

    
    1 2 3
    4 5 6
    7 8 9
    
    Compute the rest of the Band1 permutations relative to the B1 canonical choice.
  * Compute the permutations of B2 by partitioning the B1 cell values over the B2 row triplets. From the triplet combinations compute the B2 permutations. There are k=0..3 ways to choose the:

    B1 r11 values for B2 r22, the rest must go to r23,
    B1 r12 values for B2 r23, the rest must go to r21,
    B1 r13 values for B2 r21, the rest must go to r22, i.e. 
     \\mbox{N combinations for B2} = \\sum_{k=0..3}{{3 \\choose k}^3}
(This expression may be generalized to any RÃ3 box band variant. (Pettersen
[63]). Thus B2 contributes 56 Ã 63 permutations.

  * The choices for B3 triplets are row-wise determined by the B1 B2 row triplets. B3 always contributes 6^3 permutations.

The permutations for Band1 are 9! Ã 56 Ã 66 = 9! Ã 2612736 ~ 9.48 Ã 1011.

#### [edit] Band1 permutation details

Triplet rBR(box/row) Labels r 1 1  
r 1 2  
r 1 3  
r 2 1  
r 2 2  
r 2 3  
r 3 1  
r 3 2  
r 3 3  
The permutations of B1 are the number of ways to relabel the 9 digits, 9! =
362880. Counting the permutations for B2 is more complicated, because the
choices for B2 depend on the values in B1. (This is a visual representation of
the expression given above.) The conditional calculation needs a branch (sub-
calculation) for each alternative. Fortunately, there are just 4 cases for the
top B2 triplet (r21): it contains either 0, 1, 2, or 3 of the digits from the
B1 middle row triplet(r12). Once this B2 top row choice is made, the rest of
the B2 combinations are fixed. The Band1 row triplet labels are shown on the
right.

(Note: Conditional combinations becomes an increasingly difficult as the
computation progresses through the grid. At this point the impact is minimal.)

  

Case 0 Matching Cells Triplets 1 2 3  
4 5 6  
7 8 9  
7 8 9  
1 2 3  
4 5 6  
4 5 6  
7 8 9  
1 2 3  
Case 0: No Overlap. The choices for the triplets can be determined by
elimination.

r21 can't be r11 or r12 so it must be = r13; r31 must be = r12 etc.

The Case 0 diagram shows this configuration, where the pink cells are triplet
values that can be arranged in any order within the triplet. Each triplet has
3! = 6 permutations. The 6 triplets contribute 66 permutations.

Case 3: 3 Digits Match: triplet r21 = r12. The same logic as case 0 applies,
but with a different triplet usage. Triplet r22 must be = r13, etc. The number
of permutations is again 66. (Felgenhauer/Jarvis [2] call the cases 0 and 3
the pure match case.

Case 1 Match - Triplet Cell Options 1 2 3  
4 5 6  
7 8 9  
3 3 2  
1 3 2  
1 2 1  
3 2 1  
3 2 1  
3 2 1  
Case 1: 1 Match for r21 from r12

In the Case 1 diagram, B1 cells show canonical values, which are color coded
to show their row-wise distribution in B2 triplets. Colors reflect
distribution but not location or values. For this case: the B2 top row triplet
(r21) has 1 value from B1 middle triplet, the other colorings can now be
deduced. E.g. the B2 bottom row triplet (r23) coloring is forced by r21: the
other 2 B1 middle values must go to bottom, etc. Fill in the number of B2
options for each color, 3..1, beginning top left. The B3 color coding is
omitted since the B3 choices are row-wise determined by B1, B2. B3 always
contributes 3! permutations per row triplet, or 63 for the block.

For B2, the triplet values can appear in any position, so a 3! permutation
factor still applies, for each triplet. However, since some of the values were
paired relative to their origin, using the raw option counts would overcount
the number of permutations, due to interchangeability within the pairing. The
option counts need to be divided by the permuted size of their grouping (2),
here 2!.= 2 (See n Choose k) The pair in each row cancels the 2s for the B2
option counts, leaving a B2 contribution of 33 Ã 63. The B2ÃB3 combined
contribution is 33 Ã 66.

Case 2 Match - Triplet Cell Options 1 2 3  
4 5 6  
7 8 9  
3 2 3  
2 1 3  
2 1 1  
3 2 1  
3 2 1  
3 2 1  
Case 2: 2 Matches for r21 from r12. The same logic as case 1 applies, but with
the B2 option count column groupings reversed. Case 3 also contributes 33Ã66
permutations.

Totaling the 4 cases for Band1 B1..B3 gives 9! Ã 2 Ã (33 + 1) Ã 66 = 9! 56
Ã 66 permutations.

### [edit] Band1 symmetries and equivalence classes

Symmetries are used to reduce the computational effort to enumerate the Band1
permutations.

A symmetry in mathematics is an operation that preserves a quality of an
object. For a Sudoku solution grid, a symmetry is a transformation whose
result is also a solution grid. The following symmetries apply independently
for the top band:

  * Block B1 values may be relabeled, giving 9! permutations
  * Blocks B1..3 may be interchanged, with 3!=6 permutations
  * Rows 1..3 may be interchanged, with 3!=6 permutations
  * Within each block, the 3 columns may be interchanged, giving 63 permutations.

Combined, the symmetries give 9! Ã 65 = 362880 Ã 7776 equivalent
permutations for each Band1 solution.

A symmetry defines an equivalence relation, here, between the solutions, and
partitions the solutions into a set of equivalence classes. The Band1 row,
column and block symmetries divide the 56*6^6 permutations into (not less
than) 336 (56Ã6) equivalence classes with (up to) 65 permutations in each,
and 9! relabeling permutations for each class. (Min/Max caveats apply since
some permutations may not yield distinct elements due to relabeling.)

Since the solution for any member of an equivalence class can be generated
from the solution of any other member, we only need to enumerate the solutions
for a single member in order to enumerate all solutions over all classes. Let

  * sb : be a valid permutation of the top band
  * Sb = [sb] : be an equivalence class, relative to sb and some equivalence relation
  * Sb.z = |Sb| : the size of Sb, be the number of sb elements (permutations) in [sb]
  * Sb.n : be the number of Band2,3 completions for (any) sb in Sb
  * {Sb} : be the set of all Sb equivalence classes relative to the equivalence relation
  * {Sb}.z = |{Sb}| : be the number of equivalence classes

The total number of solutions N is then:

    N = \\sum_{\\{Sb\\}} \\mbox{Sb.z} \\times \\mbox{Sb.n}
#### [edit] Solution and counting permutation symmetry

The Band1 symmetries (above) are solution permutation symmetries defined so
that a permuted solution is also a solution. For the purpose of enumerating
solutions, a counting symmetry for grid completion can be used to define band
equivalence classes that yield a minimal number of classes.

Counting symmetry partitions valid Band1 permutations into classes that place
the same completion constraints on lower bands; all members of a band counting
symmetry equivalence class must have the same number of grid completions since
the completion constraints are equivalent. Counting symmetry constraints are
identified by the Band1 column triplets (a column value set, no implied
element order). Using band counting symmetry, a minimal generating set of 44
equivalence classes [64] was established.

The following sequence demonstrates mapping a band configuration to a counting
symmetry equivalence class. Begin with a valid band configuration. Band1
Example 1 2 3  
4 5 6  
7 8 9  
5 8 6  
9 1 7  
4 3 2  
7 4 9  
8 2 3  
5 1 6  
Build column triplets by ordering the column values within each column. This
is not a valid Sudoku band, but does place the same constraints on the lower
bands as the example. Column Triplets 1 2 3  
4 5 6  
7 8 9  
4 1 2  
5 3 6  
9 8 7  
5 1 3  
7 2 6  
8 4 9  
Construct an equivalence class ID from the B2, B3 column triplet values. Use
column and box swaps to achieve the lowest lexicographical ID. The last figure
shows the column and box ordering for the ID: 124 369 578 138 267 459. All
Band1 permutations with this counting symmetry ID will have the same number of
grid completions as the original example. An extension of this process can be
used to build the largest possible band counting symmetry equivalence classes.
Ordered Column Triplets 1 2 3  
4 5 6  
7 8 9  
1 3 5  
2 6 7  
4 9 8  
1 2 4  
3 6 5  
8 7 9  
Note, while column triplets are used to construct and identify the equivalence
classes, the class members themselves are the valid Band1 permutations: class
size (Sb.z) reflects column triplet permutations compatible with the One Rule
solution requirements. Counting symmetry is a completion property and applies
only to a partial grid (band or stack). Solution symmetry for preserving
solutions can be applied to either partial grids (bands, stacks) or full grid
solutions. Lastly note, counting symmetry is more restrictive than simple
numeric completion count equality: two (distinct) bands belong to the same
counting symmetry equivalence class only if they impose equivalent completion
constraints.

#### [edit] Band 1 reduction details

Symmetries group similar object into equivalence classes. Two numbers need to
be distinguished for equivalence classes, and band symmetries as used here, a
third:

  * the number of equivalence classes ({Sb}.n).
  * the cardinality, size or number of elements in an equivalence class, which may vary by class (Sb.z)
  * the number of Band2,3 completions compatible with a member of a Band1 equivalence class (Sb.n)

The Band1 (65) symmetries divide the (56Ã66) Band1 valid permutations into
(not less than) 336 (56Ã6) equivalence classes with (up to) 6^5 permutations
each. The not less than and up to caveats are necessary, since some
combinations of the transformations may not produce distinct results, when
relabeling is required (see below). Consequently some equivalence classes may
contain less than 65 distinct permutations and the theoretical minimum number
of classes may not be achieved.

Each of the valid Band1 permutations can be expanded (completed) into a
specific number of solutions with the Band2,3 permutations. By virtue of their
similarity, each member of an equivalence class will have the same number of
completions. Consequently we only need to construct the solutions for one
member of each equivalence class and then multiply the number of solutions by
the size of the equivalence class. We are still left with the task of
identifying and calculating the size of each equivalence class. Further
progress requires the dexterous application of computational techniques to
catalogue (classify and count) the permutations into equivalence classes.

Felgenhauer/Jarvis [2] catalogued the Band1 permutations using lexicographical
ordered IDs based on the ordered digits from blocks B2,3. Block 1 uses a
canonical digit assignment and is not needed for a unique ID. Equivalence
class identification and linkage uses the lowest ID within the class.

Application of the (2Ã62) B2,3 symmetry permutations produces 36288 (28Ã64)
equivalence classes, each of size 72. Since the size is fixed, the computation
only needs to find the 36288 equivalence class IDs. (Note: in this case, for
any Band1 permutation, applying these permutations to achieve the lowest ID
provides an index to the associated equivalence class.)

Application of the rest of the block, column and row symmetries provided
further reduction, i.e. allocation of the 36288 IDs into fewer, larger
equivalence classes. When the B1 canonical labeling is lost through a
transformation, the result is relabeled to the canonical B1 usage and then
catalogued under this ID. This approach generated 416 equivalence classes,
somewhat less effective than the theoretical 336 minimum limit for a full
reduction.

Application of counting symmetry patterns for duplicate paired digits achieved
reduction to 174 and then to 71 equivalence classes. The introduction of
equivalence classes based on band counting symmetry (subsequent to
Felgenhauer/Jarvis by Russell [64]) reduced the equivalence classes to a
minimum generating set of 44.

The diversity of the ~2.6Ã106, 56Ã66 Band1 permutations can be reduced to a
set of 44 Band1 equivalence classes. Each of the 44 equivalence classes can be
expanded to millions of distinct full solutions, but the entire solution space
has a common origin in these 44. The 44 equivalence classes play a central
role in other enumeration approaches as well, and speculation will return to
the characteristics of the 44 classes when puzzle properties are explored
later.

### [edit] Band 2-3 completion and results

Enumerating the Sudoku solutions breaks into an initial setup stage and then
into two nested loops. Initially all the valid Band1 permutations are grouped
into equivalence classes, who each impose a common constraint on the Band2,3
completions. For each of the Band1 equivalence classes, all possible Band2,3
solutions need to be enumerated. An outer Band1 loop iterates over the 44
equivalence classes. In the inner loop, all lower band completions for each of
the Band1 equivalence class are found and counted.

The computation required for the lower band solution search can be minimised
by the same type of symmetry application used for Band1. There are 6! (720)
permutations for the 6 values in column 1 of Band2,3. Applying the lower band
(2) and row within band (6Ã6) permutations creates 10 equivalence classes of
size 72. At this point, completing 10 sets of solutions for the remaining 48
cells with a recursive descent, backtracking algorithm is feasible with 2 GHz
class PC so further simplification is not required to carry out the
enumeration.

Using this approach, the number of ways of filling in a blank Sudoku grid was
shown in May 2005 (original announcement [65]) to be
6,670,903,752,021,072,936,960 (6.67Ã1021). The paper 'Enumerating possible
Sudoku grids' [2] by Felgenhauer and Jarvis, describes the calculation.

The result, as confirmed by Russell [64], also contains the distribution of
solution counts for the 44 equivalence classes. The listed values are before
application of the 9! factor for labeling and the two 72 factors (722 = 5184)
for each of Stack 2,3 and Band2,3 permutations. The number of completions for
each class is consistently on the order of 100,000,000, while the number of
Band1 permutations covered by each class however varies from 4 â 3240.
Within this wide size range, there are clearly two clusters. Ranked by size,
the lower 33 classes average ~400 permutations/class, while the upper 11
average ~2100. The disparity in consistency between the distributions for size
and number of completions or the separation into two clusters by size is yet
to be examined.

## [edit] Constraints of Clue Geometry

It has been postulated that no proper sudoku can have clues limited to the
range of positions in the pattern below. [66]

<IMG>

<IMG>

A range of clue positions insufficient for a proper sudoku

The largest rectangular orthogonal "hole" (region with no clues) in a proper
sudoku is believed to be a rectangle of 30 cells (a 5 x 6 rectangular
area).[67] [68] One such example is the following with 22 clues:

<IMG>

<IMG>

Sudoku with 30 cell (5 x 6) empty rectangle

The largest total number of empty groups (rows, columns, and squares) in a
sudoku is believed to be nine. One example is the following; a sudoku which
has 3 empty squares, 3 empty rows, and 3 empty columns and gives 22 clues.[69]
[70]

<IMG>

<IMG>

Sudoku with nine empty groups

## [edit] See also

  * Sudoku \- main Sudoku article
  * List of Sudoku terms and jargon
  * Dancing Links \- Donald Knuth
  * Algorithmics of sudoku

## [edit] References

  1. ^ a b http://www-imai.is.s.u-tokyo.ac.jp/~yato/data2/SIGAL87-2.pdf
  2. ^ a b c d e f g http://www.afjarvis.staff.shef.ac.uk/sudoku/sudoku.pdf
  3. ^ a b http://www.afjarvis.staff.shef.ac.uk/sudoku/
  4. ^ a b c d e http://www.afjarvis.staff.shef.ac.uk/sudoku/sudgroup.html
  5. ^ http://www2.ic-net.or.jp/~takaken/auto/guest/bbs46.html
  6. ^ a b http://www.csse.uwa.edu.au/~gordon/sudokumin.php
  7. ^ http://www.sudoku.com/boards/viewtopic.php?p=2
  8. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=138
  9. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=527
  10. ^ http://www.sudoku.com/boards/viewtopic.php?p=2992
  11. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=412
  12. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=422
  13. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=430
  14. ^ http://www.sudoku.com/boards/viewtopic.php?t=4835&start=3
  15. ^ http://www.sudoku.com/boards/viewtopic.php?t=2511&start=17
  16. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=568
  17. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=525
  18. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=567
  19. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=2
  20. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=41
  21. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=527
  22. ^ http://www.sudoku.com/boards/viewtopic.php?p=2
  23. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840
  24. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=11
  25. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=412
  26. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=548
  27. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=1
  28. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=525
  29. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=543
  30. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=543
  31. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=543
  32. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=14
  33. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=567
  34. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=567
  35. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=2
  36. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=2
  37. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=5
  38. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=11
  39. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=11
  40. ^ http://www.sudoku.com/boards/viewtopic.php?t=2840&start=11
  41. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=393
  42. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=187
  43. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=403
  44. ^ http://www.setbb.com/phpbb/viewtopic.php?t=366&mforum=sudoku
  45. ^ http://www.sudoku.com/boards/viewtopic.php?p=3366
  46. ^ http://homepages.cwi.nl/~aeb/games/sudoku/nrc.html
  47. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=454
  48. ^ http://www.afjarvis.staff.shef.ac.uk/sudoku/sud23gp.html
  49. ^ http://www.maths.qmul.ac.uk/~pjc/preprints/sudoku.pdf
  50. ^ http://www.afjarvis.staff.shef.ac.uk/sudoku/sud24gp.html
  51. ^ http://www.sudoku.com/boards/viewtopic.php?t=4281
  52. ^ http://www.sudoku.com/boards/viewtopic.php?t=4281&start=6
  53. ^ http://www.math.ie/checker.html
  54. ^ http://www.csse.uwa.edu.au/~gordon/sudokupat.php?cn=3
  55. ^ http://www.sudoku.com/boards/viewtopic.php?t=3284&start=7
  56. ^ http://magictour.free.fr/sudoku6
  57. ^ http://www.sudoku.com/boards/viewtopic.php?t=2082&postdays=0&postorder=asc&start=16
  58. ^ http://www.sudocue.net/minx.php
  59. ^ http://homepages.cwi.nl/~aeb/games/sudoku/nrc.html
  60. ^ http://www.bumblebeagle.org/dusumoh/9x9/index.html
  61. ^ http://www.bumblebeagle.org/dusumoh/proof/index.html
  62. ^ http://www7a.biglobe.ne.jp/~sumnumberplace/79790008/
  63. ^ http://www.sudoku.com/boards/viewtopic.php?p=11444#11444
  64. ^ a b c http://www.afjarvis.staff.shef.ac.uk/sudoku/ed44.html
  65. ^ http://www.sudoku.com/boards/viewtopic.php?t=44&start=138
  66. ^ http://www.sudoku.com/boards/viewtopic.php?t=5384&postdays=0&postorder=asc&start=0 (ask for some patterns that they don't have puzzles)
  67. ^ http://www.sudoku.com/boards/viewtopic.php?t=4209&highlight=largest+empty+hole largest hole in a sudoko; largest empty space
  68. ^ http://www.flickr.com/photos/npcomplete/2471768905/ large empty space
  69. ^ http://www.sudoku.com/boards/viewtopic.php?t=1180&postdays=0&postorder=asc&start=15 largest number of empty groups?
  70. ^ http://www.flickr.com/photos/npcomplete/2361922691/ clues bunched in clusters

## [edit] External links

  * Enumerating possible Sudoku grids by Felgenhauer and Jarvis, describes the all-solutions calculation
  * V. Elser's difference-map algorithm also solves Sudoku
  * Sudoku Puzzle - an Exercise in Constraint Programming and Visual Prolog 7 by Carsten Kehler Holst (in Visual Prolog)
  * Sudoku Squares and Chromatic Polynomials by Herzberg and Murty, treats Sudoku puzzles as vertex coloring problems in graph theory.

Retrieved from "http://en.wikipedia.org/wiki/Mathematics_of_Sudoku"

Categories: Sudoku | Latin squares | Recreational mathematics

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * FranÃ§ais
  * Ð ÑÑÑÐºÐ¸Ð¹

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 1 April 2009, at 20:32 (UTC).
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



