
# Discrete logarithm

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

In mathematics, specifically in abstract algebra and its applications,
discrete logarithms are group-theoretic analogues of ordinary logarithms. In
particular, an ordinary logarithm loga(b) is a solution of the equation ax = b
over the real or complex numbers. Similarly, if g and h are elements of a
finite cyclic group G then a solution x of the equation gx = h is called a
discrete logarithm to the base g of h in the group G.

## Contents

  * 1 Example
  * 2 Definition
  * 3 Algorithms
  * 4 Comparison with integer factorization
  * 5 Cryptography
  * 6 See also
  * 7 References

  
## [edit] Example

Discrete logarithms are perhaps simplest to understand in the group (Zp)Ã.
This is the set of congruence classes {1, â¦, p â 1} under multiplication
modulo the prime p.

If we want to find the kth power of one of the numbers in this group, we can
do so by finding its kth power as an integer and then finding the remainder
after division by p. This process is called discrete exponentiation. For
example, consider (Z17)Ã. To compute 34 in this group, we first compute 34 =
81, and then we divide 81 by 17, obtaining a remainder of 13. Thus 34 = 13 in
the group (Z17)Ã.

Discrete logarithm is just the inverse operation. For example, take the
equation 3k â¡ 13 (mod 17) for k. As shown above k=4 is a solution, but it is
not the only solution. Since 316 â¡ 1 (mod 17) it also follows that if n is
an integer then 34+16 n â¡ 13 Ã 1n â¡ 13 (mod 17). Hence the equation has
infinitely many solutions of the form 4 + 16n. Moreover, since 16 is the
smallest positive integer m satisfying 3m â¡ 1 (mod 17), i.e. 16 is the order
of 3 in (Z17)Ã, these are the only solutions. Equivalently, the solution can
be expressed as k â¡ 4 (mod 16).

## [edit] Definition

In general, let G be a finite cyclic group with n elements. We assume that the
group is written multiplicatively. Let b be a generator of G; then every
element g of G can be written in the form g = bk for some integer k.
Furthermore, any two such integers representing g will be congruent modulo n.
We can thus define a function

    \\log_b:\\  G\\ \\rightarrow\\ \\mathbf{Z}_n
(where Zn denotes the ring of integers modulo n) by assigning to g the
congruence class of k modulo n. This function is a group isomorphism, called
the discrete logarithm to base b.

The familiar base change formula for ordinary logarithms remains valid: If c
is another generator of G, then we have

    \\log_c \(g\) = \\log_c \(b\) \\cdot \\log_b \(g\).
## [edit] Algorithms

No efficient algorithm for computing general discrete logarithms logbg is
known. The naive algorithm is to raise b to higher and higher powers k until
the desired g is found; this is sometimes called trial multiplication. This
algorithm requires running time linear in the size of the group G and thus
exponential in the number of digits in the size of the group. There exists an
efficient quantum algorithm due to Peter Shor however
(http://arxiv.org/abs/quant-ph/9508027).

More sophisticated algorithms exist, usually inspired by similar algorithms
for integer factorization. These algorithms run faster than the naive
algorithm, but none of them runs in polynomial time (in the number of digits
in the size of the group).

  * Baby-step giant-step
  * Pollard's rho algorithm for logarithms
  * Pollard's lambda algorithm (aka Pollard's kangaroo algorithm)
  * Pohlig-Hellman algorithm
  * Index calculus algorithm
  * Number field sieve
  * Function field sieve

## [edit] Comparison with integer factorization

While the problem of computing discrete logarithms and the problem of integer
factorization are distinct problems they share some properties

  * both problems are difficult (no efficient algorithms are known for non-quantum computers),
  * for both problems efficient algorithms on quantum computers are known,
  * algorithms from one problem are often adapted to the other, and
  * the difficulty of both problems has been exploited to construct various cryptographic (code) systems.

## [edit] Cryptography

Computing discrete logarithms is apparently difficult. Not only is no
efficient algorithm known for the worst case, but the average-case complexity
can be shown to be at least as hard as the worst case using random self-
reducibility.

At the same time, the inverse problem of discrete exponentiation is not (it
can be computed efficiently using exponentiation by squaring, for example).
This asymmetry is analogous to the one between integer factorization and
integer multiplication. Both asymmetries have been exploited in the
construction of cryptographic systems.

Popular choices for the group G in discrete logarithm cryptography are the
cyclic groups (Zp)Ã; see ElGamal encryption, Diffie-Hellman key exchange, and
the Digital Signature Algorithm.

Newer cryptography applications use discrete logarithms in cyclic subgroups of
elliptic curves over finite fields; see elliptic curve cryptography.

## [edit] See also

<IMG> Cryptography portal  
  

## [edit] References

  * Richard Crandall; Carl Pomerance. Chapter 5, Prime Numbers: A computational perspective, 2nd ed., Springer.
  * Douglas R. Stinson. Cryptography: Theory and Practice, CRC Press, 2002.

Retrieved from "http://en.wikipedia.org/wiki/Discrete_logarithm"

Categories: Modular arithmetic | Group theory | Cryptography | Logarithms |
Finite fields | Binary operations | Computational hardness assumptions

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * CatalÃ 
  * Äesky
  * Deutsch
  * EspaÃ±ol
  * Esperanto
  * ÙØ§Ø±Ø³Û
  * FranÃ§ais
  * íêµ­ì´
  * Italiano
  * ×¢××¨××ª
  * Nederlands
  * æ¥æ¬èª
  * Polski
  * Ð ÑÑÑÐºÐ¸Ð¹
  * Tiáº¿ng Viá»t
  * ä¸­æ

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 21 January 2009, at 22:50.
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



