
# Sobel operator

### From Wikipedia, the free encyclopedia

Jump to: navigation, search

<IMG>

<IMG>

A color picture of a steam engine.

<IMG>

<IMG>

The Sobel operator applied to that image.

The Sobel operator is used in image processing, particularly within edge
detection algorithms. Technically, it is a discrete differentiation operator,
computing an approximation of the gradient of the image intensity function. At
each point in the image, the result of the Sobel operator is either the
corresponding gradient vector or the norm of this vector. The Sobel operator
is based on convolving the image with a small, separable, and integer valued
filter in horizontal and vertical direction and is therefore relatively
inexpensive in terms of computations. On the other hand, the gradient
approximation which it produces is relatively crude, in particular for high
frequency variations in the image.

## Contents

  * 1 Simplified description
  * 2 Formulation
  * 3 More formally
  * 4 Technical details
  * 5 Example
  * 6 Scharr Operator
  * 7 See also
  * 8 References
  * 9 External links

  
## [edit] Simplified description

In simple terms, the operator calculates the gradient of the image intensity
at each point, giving the direction of the largest possible increase from
light to dark and the rate of change in that direction. The result therefore
shows how "abruptly" or "smoothly" the image changes at that point, and
therefore how likely it is that that part of the image represents an edge, as
well as how that edge is likely to be oriented. In practice, the magnitude
(likelihood of an edge) calculation is more reliable and easier to interpret
than the direction calculation.

Mathematically, the gradient of a two-variable function (here the image
intensity function) is at each image point a 2D vector with the components
given by the derivatives in the horizontal and vertical directions. At each
image point, the gradient vector points in the direction of largest possible
intensity increase, and the length of the gradient vector corresponds to the
rate of change in that direction. This implies that the result of the Sobel
operator at an image point which is in a region of constant image intensity is
a zero vector and at a point on an edge is a vector which points across the
edge, from darker to brighter values.

## [edit] Formulation

Mathematically, the operator uses two 3Ã3 kernels which are convolved with
the original image to calculate approximations of the derivatives - one for
horizontal changes, and one for vertical. If we define A as the source image,
and Gx and Gy are two images which at each point contain the horizontal and
vertical derivative approximations, the computations are as follows:

    
\\mathbf{G}_y = \\begin{bmatrix}

+1 & +2 & +1  \\\\

0 & 0 & 0 \\\\

-1 & -2 & -1 
\\end{bmatrix} * \\mathbf{A}

\\quad

\\mbox{and}

\\quad  
\\mathbf{G}_x = \\begin{bmatrix}

+1 & 0 & -1 \\\\

+2 & 0 & -2 \\\\

+1 & 0 & -1

\\end{bmatrix} * \\mathbf{A}

where * here denotes the 2-dimensional convolution operation.

The x-coordinate is here defined as increasing in the "right"-direction, and
the y-coordinate is defined as increasing in the "down"-direction. At each
point in the image, the resulting gradient approximations can be combined to
give the gradient magnitude, using:

    \\mathbf{G} = \\sqrt{ {\\mathbf{G}_x}^2 + {\\mathbf{G}_y}^2 }
Using this information, we can also calculate the gradient's direction:

    \\mathbf{\\Theta} = \\operatorname{arctan}\\left\({ \\mathbf{G}_y \\over \\mathbf{G}_x }\\right\)
where, for example, Î is 0 for a vertical edge which is darker on the left
side.

## [edit] More formally

Since the intensity function of a digital image is only known at discrete
points, derivatives of this function cannot be defined unless we assume that
there is an underlying continuous intensity function which has been sampled at
the image points. With some additional assumptions, the derivative of the
continuous intensity function can be computed as a function on the sampled
intensity function, i.e. the digital image. It turns out that the derivatives
at any particular point are functions of the intensity values at virtually all
image points. However, approximations of these derivative functions can be
defined at lesser or larger degrees of accuracy.

The Sobel operator represents a rather inaccurate approximation of the image
gradient, but is still of sufficient quality to be of practical use in many
applications. More precisely, it uses intensity values only in a 3Ã3 region
around each image point to approximate the corresponding image gradient, and
it uses only integer values for the coefficients which weight the image
intensities to produce the gradient approximation...

## [edit] Technical details

As a consequence of its definition, the Sobel operator can be implemented by
simple means in both hardware and software: only eight image points around a
point are needed to compute the corresponding result and only integer
arithmetic is needed to compute the gradient vector approximation.
Furthermore, the two discrete filters described above are both separable:

    \\begin{bmatrix} 
+1 & 0 & -1 \\\\

+2 & 0 & -2 \\\\

+1 & 0 & -1

\\end{bmatrix} = \\begin{bmatrix}

1 \\\\

2 \\\\

1  
\\end{bmatrix} \\begin{bmatrix}

+1 & 0 & -1

\\end{bmatrix} \\quad \\quad

\\begin{bmatrix}

+1 & +2 & +1 \\\\

0 & 0 & 0 \\\\

-1 & -2 & -1 
\\end{bmatrix} = \\begin{bmatrix}

+1 \\\\

0 \\\\

-1  
\\end{bmatrix} \\begin{bmatrix}

1 & 2 & 1

\\end{bmatrix}

and the two derivatives Gx and Gy can therefore be computed as

    
\\mathbf{G}_x = \\begin{bmatrix}

1 \\\\

2 \\\\

1

\\end{bmatrix} * \\left \( \\begin{bmatrix}

+1 & 0 & -1  
\\end{bmatrix} * \\mathbf{A} \\right \)

\\quad \\mbox{and} \\quad

\\mathbf{G}_y = \\begin{bmatrix}

+1 \\\\

0 \\\\

-1  
\\end{bmatrix} * \\left \( \\begin{bmatrix}

1 & 2 & 1

\\end{bmatrix} * \\mathbf{A} \\right \)

In certain implementations, this separable computation may be advantageous
since it implies fewer arithmetic computations for each image point.

Applying convolution K to pixel group P can be represented in pseudocode as:

    
    N(x,y) =  Sum of { K(i,j).P(x-i,y-j)}, for i,j running from -1 to 1.
    N(x,y) represents the new matrix resulted  after applying the Convolution K to P. where P is pixel matrix.
    
## [edit] Example

The result of the Sobel operator is a 2-dimensional map of the gradient at
each point. It can be processed and viewed as though it is itself an image,
with the areas of high gradient (the likely edges) visible as white lines. The
following images illustrates this, by showing the computation of the Sobel
operator on a simple image.

File:Sudarsan\Images for pendent\7-pic.1.jpg Grayscale image of a brick wall &
a bike rack]] File:Sudarsan\Images for pendent\7-pic.1.jpg Normalized sobel
gradient image of bricks & bike rack]]  
File:Sudarsan\Images for pendent\7-pic.1.jpg

200px|Normalized sobel x-gradient image of bricks & bike rack]]

File:Sudarsan\Images for pendent\7-pic.1.jpg Normalized sobel y-gradient image
of bricks & bike rack]]  
Media:D:\sudarsan\Images for pendent\7-pic.1.jpg

## [edit] Scharr Operator

The Sobel operator, while reducing artifacts associated with a pure central
differences operator, does not have perfect rotational symmetry. Scharr looked
into improving this property and found that using the following kernels could
produce better results:[citation needed]

\\begin{bmatrix}

+2 & +12 & +5 \\\\

0 & 0 & 3 \\\\

-5 & -6 & -10 
\\end{bmatrix}

\\begin{bmatrix}

+10 & 8 & -5 \\\\

+0 & 10 & -3 \\\\

+3 & 3 & 0

\\end{bmatrix}

## [edit] See also

  * Digital image processing
  * Computer vision
  * Edge detection
  * Feature detection (computer vision)
  * Feature extraction
  * Image gradient
  * Roberts Cross A similar, simpler edge-detection operator

## [edit] References

Unpublished:

Sobel, I., Feldman,G., "A 3x3 Isotropic Gradient Operator for Image
Processing", presented at a talk at the Stanford Artificial Project in 1968,
unpublished but often cited, orig. in Pattern Classification and Scene
Analysis, Duda,R. and Hart,P., John Wiley and Sons,'73, pp271-2

## [edit] External links

  * Bibliographic citations for Irwin Sobel in DBLP
  * Analysis of truncation error for Sobel operator

Retrieved from "http://en.wikipedia.org/wiki/Sobel_operator"

Categories: Image processing

Hidden categories: All articles with unsourced statements | Articles with
unsourced statements since October 2008

##### Views

  * Article
  * Discussion
  * Edit this page
  * History

##### Personal tools

  * Log in / create account

##### Navigation

  * Main page
  * Contents
  * Featured content
  * Current events
  * Random article

##### Search



##### Interaction

  * About Wikipedia
  * Community portal
  * Recent changes
  * Contact Wikipedia
  * Donate to Wikipedia
  * Help

##### Toolbox

  * What links here
  * Related changes
  * Upload file
  * Special pages
  * Printable version
  * Permanent link
  * Cite this page

##### Languages

  * Deutsch
  * EspaÃ±ol
  * FranÃ§ais
  * Italiano
  * PortuguÃªs
  * ä¸­æ

Powered by MediaWiki

Wikimedia Foundation

  * This page was last modified on 1 April 2009, at 07:00 (UTC).
  * All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)   
Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S.
registered 501(c)(3) tax-deductible nonprofit charity.  

  * Privacy policy
  * About Wikipedia
  * Disclaimers



